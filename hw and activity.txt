PRACTICAL 1
Objective
Create “Hello World” application that will display “Hello World” in the middle of the screen in the emulator. Also display “Hello World” in the middle of the screen in the android phone.
Code
app/src/main/res/layout/activity_main.xml
<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:padding="75dp"
    tools:context=".MainActivity">

    <TextView
        android:id="@+id/tvHelloWorld"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_centerInParent="true"
        android:text="Hello World!"
        android:textColor="#FF0000"
        android:textSize="36sp"
        android:textStyle="bold" />

</RelativeLayout>

app/src/main/java/pro/ghosh/helloworld/MainActivity.java
package pro.ghosh.helloworld;

import android.os.Bundle;
import androidx.appcompat.app.AppCompatActivity;

public class MainActivity extends AppCompatActivity {
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
    }
}













PRACTICAL 2
Objective
Create an application to display various android activity lifecycle phases.
Code
app/src/main/AndroidManifest.xml
<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="pro.ghosh.activitylifecyclephases">

    <application
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/Theme.ActivityLifeCyclePhases">
        <activity android:name=".AnotherActivity"></activity>
        <activity android:name=".MainActivity">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
    </application>

</manifest>

app/src/main/res/layout/activity_main.xml
<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity">

    <Button
        android:id="@+id/btnGoToAnother"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_centerInParent="true"
        android:text="Go to Another Activity" />

</RelativeLayout>

app/src/main/java/pro/ghosh/activitylifecyclephases/MainActivity.java
package pro.ghosh.activitylifecyclephases;

import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;

import androidx.appcompat.app.AppCompatActivity;

public class MainActivity extends AppCompatActivity {
    private Button btnGoToAnother;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        btnGoToAnother = (Button) findViewById(R.id.btnGoToAnother);
        btnGoToAnother.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Intent intent = new Intent(MainActivity.this, AnotherActivity.class);
                startActivity(intent);
            }
        });
    }
}

app/src/main/res/layout/activity_another.xml
<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".AnotherActivity">

    <Button
        android:id="@+id/btnGoToMain"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_centerInParent="true"
        android:backgroundTint="@color/teal_200"
        android:text="Go Back to Main Activity"
        android:textColor="@color/black" />

</RelativeLayout>
app/src/main/java/pro/ghosh/activitylifecyclephases/AnotherActivity.java
package pro.ghosh.activitylifecyclephases;

import android.content.Intent;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.Button;

import androidx.appcompat.app.AppCompatActivity;

public class AnotherActivity extends AppCompatActivity {
    private final String LOG_TAG = "AnotherActivity";
    private Button btnGoToMain;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_another);
        Log.d(LOG_TAG, "Activity Created");
        btnGoToMain = (Button) findViewById(R.id.btnGoToMain);
        btnGoToMain.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Intent intent = new Intent(AnotherActivity.this, MainActivity.class);
                startActivity(intent);
            }
        });
    }
    @Override
    protected void onStart() {
        super.onStart();
        Log.d(LOG_TAG, "Activity Started");
    }
    @Override
    protected void onResume() {
        super.onResume();
        Log.d(LOG_TAG, "Activity Resumed");
    }
    @Override
    protected void onPause() {
        super.onPause();
        Log.d(LOG_TAG, "Activity Paused");
    }
    @Override
    protected void onStop() {
        super.onStop();
        Log.d(LOG_TAG, "Activity Stopped");
    }
    @Override
    protected void onDestroy() {
        super.onDestroy();
        Log.d(LOG_TAG, "Activity Destroyed");
    }
    @Override
    protected void onRestart() {
        super.onRestart();
        Log.d(LOG_TAG, "Activity Restarted");
    }
}
