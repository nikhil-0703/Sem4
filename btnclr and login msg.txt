PRACTICAL 9(A)
Objective
Create an application with three buttons (with different colour names) vertically aligned, on selecting a button colour of the screen will change.
Code
app/src/main/res/layout/activity_main.xml
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:id="@+id/layoutSuperParent"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity">
    <LinearLayout
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:orientation="vertical"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintLeft_toLeftOf="parent"
        app:layout_constraintRight_toRightOf="parent"
        app:layout_constraintTop_toTopOf="parent">
        <Button
            android:id="@+id/btnRed"
            android:layout_width="150dp"
            android:layout_height="wrap_content"
            android:layout_gravity="center"
            android:backgroundTint="@android:color/holo_red_dark"
            android:text="Red" />
        <Button
            android:id="@+id/btnGreen"
            android:layout_width="150dp"
            android:layout_height="wrap_content"
            android:layout_gravity="center"
            android:backgroundTint="@android:color/holo_green_dark"
            android:text="Green" />
        <Button
            android:id="@+id/btnBlue"
            android:layout_width="150dp"
            android:layout_height="wrap_content"
            android:layout_gravity="center"
            android:backgroundTint="@android:color/holo_blue_dark"
            android:text="Blue" />
        <Button
            android:id="@+id/btnReset"
            android:layout_width="150dp"
            android:layout_height="wrap_content"
            android:layout_gravity="center"
            android:text="Reset" />
    </LinearLayout>
</androidx.constraintlayout.widget.ConstraintLayout>

app/src/main/java/pro/ghosh/changecolorvertical/MainActivity.java
package pro.ghosh.changecolorvertical;
import android.graphics.Color;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import androidx.appcompat.app.AppCompatActivity;
import androidx.constraintlayout.widget.ConstraintLayout;

public class MainActivity extends AppCompatActivity implements View.OnClickListener {
    private Button btnRed;
    private Button btnGreen;
    private Button btnBlue;
    private Button btnReset;
    private ConstraintLayout layoutSuperParent;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        layoutSuperParent = (ConstraintLayout) findViewById(R.id.layoutSuperParent);
        btnRed = (Button) findViewById(R.id.btnRed);
        btnGreen = (Button) findViewById(R.id.btnGreen);
        btnBlue = (Button) findViewById(R.id.btnBlue);
        btnReset = (Button) findViewById(R.id.btnReset);
        btnRed.setOnClickListener(this);
        btnGreen.setOnClickListener(this);
        btnBlue.setOnClickListener(this);
        btnReset.setOnClickListener(this);
    }
    @Override
    public void onClick(View v) {
        switch (v.getId()) {
            case R.id.btnRed:
                layoutSuperParent.setBackgroundColor(Color.RED);
                break;
            case R.id.btnGreen:
                layoutSuperParent.setBackgroundColor(Color.GREEN);
                break;
            case R.id.btnBlue:
                layoutSuperParent.setBackgroundColor(Color.BLUE);
                break;
            case R.id.btnReset:
                layoutSuperParent.setBackgroundColor(Color.TRANSPARENT);
                break;
            default:
                break;
        }
    }
}















PRACTICAL 9(B)
Objective
Create an application with three buttons horizontally aligned, on selecting a button colour of the screen will change.
Code
app/src/main/res/layout/activity_main.xml
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:id="@+id/layoutSuperParent"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity">

    <LinearLayout
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:orientation="horizontal"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintLeft_toLeftOf="parent"
        app:layout_constraintRight_toRightOf="parent"
        app:layout_constraintTop_toTopOf="parent">

        <Button
            android:id="@+id/btnRed"
            android:layout_width="90dp"
            android:layout_height="wrap_content"
            android:layout_gravity="center"
            android:backgroundTint="@android:color/holo_red_dark"
            android:text="Red" />

        <Button
            android:id="@+id/btnGreen"
            android:layout_width="90dp"
            android:layout_height="wrap_content"
            android:layout_gravity="center"
            android:backgroundTint="@android:color/holo_green_dark"
            android:text="Green" />

        <Button
            android:id="@+id/btnBlue"
            android:layout_width="90dp"
            android:layout_height="wrap_content"
            android:layout_gravity="center"
            android:backgroundTint="@android:color/holo_blue_dark"
            android:text="Blue" />

        <Button
            android:id="@+id/btnReset"
            android:layout_width="90dp"
            android:layout_height="wrap_content"
            android:layout_gravity="center"
            android:text="Reset" />
    </LinearLayout>
</androidx.constraintlayout.widget.ConstraintLayout>

app/src/main/java/pro/ghosh/changecolorhorizontal/MainActivity.java
package pro.ghosh.changecolorhorizontal;

import androidx.appcompat.app.AppCompatActivity;

import android.os.Bundle;

import android.graphics.Color;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;

import androidx.appcompat.app.AppCompatActivity;
import androidx.constraintlayout.widget.ConstraintLayout;

public class MainActivity extends AppCompatActivity implements View.OnClickListener {

    private Button btnRed;
    private Button btnGreen;
    private Button btnBlue;
    private Button btnReset;
    private ConstraintLayout layoutSuperParent;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        layoutSuperParent = (ConstraintLayout) findViewById(R.id.layoutSuperParent);

        btnRed = (Button) findViewById(R.id.btnRed);
        btnGreen = (Button) findViewById(R.id.btnGreen);
        btnBlue = (Button) findViewById(R.id.btnBlue);
        btnReset = (Button) findViewById(R.id.btnReset);

        btnRed.setOnClickListener(this);
        btnGreen.setOnClickListener(this);
        btnBlue.setOnClickListener(this);
        btnReset.setOnClickListener(this);
    }

    @Override
    public void onClick(View v) {
        switch (v.getId()) {
            case R.id.btnRed:
                layoutSuperParent.setBackgroundColor(Color.RED);
                break;
            case R.id.btnGreen:
                layoutSuperParent.setBackgroundColor(Color.GREEN);
                break;
            case R.id.btnBlue:
                layoutSuperParent.setBackgroundColor(Color.BLUE);
                break;
            case R.id.btnReset:
                layoutSuperParent.setBackgroundColor(Color.TRANSPARENT);
                break;
            default:
                break;
        }
    }
}


















PRACTICAL 10
Objective
Create a Login application (check username and password). On successful login, pop up the message. ("Welcome username").
Code
app/src/main/res/layout/activity_main.xml
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity">

    <EditText
        android:id="@+id/etEmail"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginTop="240dp"
        android:autofillHints="false"
        android:ems="10"
        android:hint="@string/e_mail_id"
        android:inputType="textEmailAddress"
        app:layout_constraintBottom_toTopOf="@id/etPassword"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent" />

    <EditText
        android:id="@+id/etPassword"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginTop="10dp"
        android:autofillHints="false"
        android:ems="10"
        android:hint="@string/password"
        android:inputType="textPassword"
        app:layout_constraintBottom_toTopOf="@id/btnLogin"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@id/etEmail" />

    <Button
        android:id="@+id/btnLogin"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginTop="30dp"
        android:text="@string/login"
        app:layout_constraintBottom_toTopOf="@id/btnRegister"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@id/etPassword" />

    <Button
        android:id="@+id/btnRegister"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginBottom="250dp"
        android:text="@string/register"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@id/btnLogin" />

</androidx.constraintlayout.widget.ConstraintLayout>

app/src/main/res/values/strings.xml
<resources>
    <string name="app_name">LoginValidation</string>
    <string name="welcome">Welcome</string>
    <string name="log_out">Log Out</string>
    <string name="password">Password</string>
    <string name="e_mail_id">E-mail ID</string>
    <string name="login">Login</string>
    <string name="register">Register</string>
    <string name="cancel">Cancel</string>
    <string name="ok">Ok</string>
</resources>

app/src/main/java/pro/ghosh/loginvalidation/MainActivity.java
package pro.ghosh.loginvalidation;

import android.database.sqlite.SQLiteConstraintException;
import android.os.Bundle;
import android.util.Log;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;

import androidx.appcompat.app.AppCompatActivity;

import pro.ghosh.loginvalidation.models.User;
import pro.ghosh.loginvalidation.services.UserService;

public class MainActivity extends AppCompatActivity {
    private EditText etEmail;
    private EditText etPassword;
    private Button btnLogin;
    private Button btnRegister;
    private UserService userService;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        userService = UserService.getInstance();
        UserService.initDatabase(this);

        etEmail = (EditText) findViewById(R.id.etEmail);
        etPassword = (EditText) findViewById(R.id.etPassword);
        btnLogin = (Button) findViewById(R.id.btnLogin);
        btnRegister = (Button) findViewById(R.id.btnRegister);

        btnLogin.setOnClickListener(v -> {
            User user = validateCredentials();
            if (user != null) {
                try {
                    userService.login(user);
                    Toast.makeText(this, "Welcome " + userService.getUser().email, Toast.LENGTH_SHORT).show();
                } catch (IllegalStateException illegalStateException) {
                    Toast.makeText(this, "Invalid E-mail/Password", Toast.LENGTH_SHORT).show();
                } catch (Exception e) {
                    Log.d("TAG", e.getMessage());
                    Toast.makeText(this, "Error", Toast.LENGTH_SHORT).show();
                }
            }
        });

        btnRegister.setOnClickListener(v -> {
            User user = validateCredentials();
            if (user != null) {
                try {
                    userService.register(user);
                    Toast.makeText(this, "Registered", Toast.LENGTH_SHORT).show();
                } catch (SQLiteConstraintException sqLiteConstraintException) {
                    Toast.makeText(this, "E-mail Already Used", Toast.LENGTH_SHORT).show();
                } catch (Exception e) {
                    Toast.makeText(this, "Error", Toast.LENGTH_SHORT).show();
                }
            }
        });
    }

    private User validateCredentials() {
        String email = etEmail.getText().toString().trim();
        String password = etPassword.getText().toString().trim();

        if (email.length() == 0) {
            etEmail.setError("Enter your e-mail address");
            return null;
        }

        if (password.length() == 0) {
            etPassword.setError("Enter your password");
            return null;
        }

        return new User(email, password);
    }
}

app/src/main/java/pro/ghosh/loginvalidation/models/User.java
package pro.ghosh.loginvalidation.models;

import androidx.annotation.NonNull;
import androidx.room.ColumnInfo;
import androidx.room.Entity;
import androidx.room.PrimaryKey;

@Entity
public class User {
    @PrimaryKey
    @NonNull
    @ColumnInfo(name = "email")
    public String email;

    @NonNull
    @ColumnInfo(name = "password")
    public String password;

    public User(@NonNull String email, @NonNull String password) {
        this.email = email;
        this.password = password;
    }
}

app/src/main/java/pro/ghosh/loginvalidation/data/UserDao.java
package pro.ghosh.loginvalidation.data;

import androidx.room.Dao;
import androidx.room.Delete;
import androidx.room.Insert;
import androidx.room.Query;

import java.util.List;

import pro.ghosh.loginvalidation.models.User;

@Dao
public interface UserDao {
    @Query("SELECT * FROM user")
    List<User> getAll();

    @Query("SELECT * FROM user WHERE email LIKE :email LIMIT 1")
    User findByEmail(String email);

    @Insert
    void insert(User user);

    @Delete
    void delete(User user);
}

app/src/main/java/pro/ghosh/loginvalidation/data/UserDatabase.java
package pro.ghosh.loginvalidation.data;

import androidx.room.RoomDatabase;
import androidx.room.Database;

import pro.ghosh.loginvalidation.models.User;

@Database(entities = {User.class}, version = 1)
public abstract class UserDatabase extends RoomDatabase {
    public abstract UserDao userDao();
}

app/src/main/java/pro/ghosh/loginvalidation/services/UserService.java
package pro.ghosh.loginvalidation.services;

import android.content.Context;

import androidx.room.Room;

import pro.ghosh.loginvalidation.data.UserDatabase;
import pro.ghosh.loginvalidation.models.User;

public class UserService {
    private User user = null;
    private static UserService instance = null;
    private static UserDatabase database = null;

    public void login(User user) throws IllegalStateException {
        User u = database.userDao().findByEmail(user.email);
        if (!u.password.equals(user.password))
            throw new IllegalStateException("Password Mismatch");
        this.user = user;
    }

    public void register(User user) {
        database.userDao().insert(user);
        this.user = user;
    }

    public void logout() {
        this.user = null;
    }

    public User getUser() {
        return user;
    }

    public static UserService getInstance() {
        if (instance == null) {
            instance = new UserService();
        }
        return instance;
    }

    public static void initDatabase(Context ctx) {
        if (database == null) {
            database = Room
                    .databaseBuilder(ctx, UserDatabase.class, "login_module")
                    .allowMainThreadQueries()
                    .build();
        }
    }
}
